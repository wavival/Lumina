---
import Container from "../ui/Container.astro";
import Button from "../ui/Button.astro";
import Icon from "../ui/Icon.astro";
import Link from "../ui/Link.astro";

const links = [
  { href: "/projects", label: "Proyectos" },
  { href: "/more/about", label: "Sobre mí"  },
];
const pathname = Astro.url.pathname;
const isActive = (href: string) => pathname.startsWith(href);
---

<header class="fixed w-full top-0 z-50 backdrop-blur-lg backdrop-saturate-150 bg-[var(--nav-blur)] dark:bg-[var(--nav-blur)]">
  <Container as="div" class="h-auto flex items-center justify-between mx-0 max-w-full p-12 md:px-16 lg:px-32">

    <a href="/" aria-label="Inicio" class="flex items-center gap-3">
      <img src="/brand/lumina-logo-light.svg" alt="Lúmina" class="h-32 dark:hidden" />
      <img src="/brand/lumina-logo-dark.svg"  alt="Lúmina" class="h-32 hidden dark:block" />
    </a>

    <nav class="hidden md:flex items-center gap-32" aria-label="Navegación principal">
      <ul role="list" class="flex items-center gap-32">
        {links.map((l) => (
          <li><Link href={l.href} aria-current={isActive(l.href) ? "page" : undefined} class="nav-link uppercase">{l.label}</Link></li>
        ))}
      </ul>
      <Button href="mailto:wavival.dev@luminaw.co" target="_blank" icon="ui/send-email-white" text="Contáctame" />
    </nav>

    <div class="hidden md:flex items-center gap-3">
      <button class="p-2 rounded-lg hover:bg-[var(--ui-hover)]/10" aria-label="Cambiar idioma">
        <Icon src="/icons/ui/switch-language.svg" size="md" />
      </button>
      <button id="theme-toggle" aria-pressed="false" class="p-2 rounded-lg hover:bg-[var(--ui-hover)]/10" aria-label="Cambiar tema">
          <Icon src="/icons/ui/sun.svg"  size="md" class="dark:hidden" />
          <Icon src="/icons/ui/moon.svg" size="md" class="hidden dark:inline-flex" />
        </button>
    </div>

    <button class="md:hidden p-2 rounded-lg hover:bg-[var(--ui-hover)]/10" id="menu-btn" aria-expanded="false" aria-controls="mobile-menu" aria-label="Abrir menú">
      <Icon src="/icons/ui/open-menu.svg" />
    </button>
  </Container>

  <nav id="mobile-menu" aria-label="Menú móvil" aria-hidden="true" class="md:hidden absolute right-16 top-42 w-auto h-auto rounded-2xl bg-[var(--bg-blur)] p-5 overflow-hidden backdrop-blur-lg shadow-[var(--shadow-base)] opacity-0 translate-y-2 scale-95 invisible pointer-events-none transition-all duration-300 ease-out will-change-transform will-change-opacity motion-reduce:transition-none">
  <div class="h-full flex flex-col justify-between items-end gap-32">
    <ul role="list" class="flex flex-col items-end gap-12">
      {links.map((l) => (
        <li>
          <Link
            href={l.href}
            aria-current={isActive(l.href) ? "page" : undefined}
            class="nav-link uppercase"
          >
            {l.label}
          </Link>
        </li>
      ))}
    </ul>

    <div class="flex items-center gap-4">
      <button type="button" class="p-2 rounded-lg hover:bg-[var(--ui-hover)]/10 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-[var(--ui-link)]" aria-label="Cambiar idioma" id="lang-toggle-mobile">
        <Icon src="/icons/ui/switch-language.svg" size="md" />
      </button>

      <button id="theme-toggle-mobile" aria-pressed="false" class="p-2 pr-0 rounded-lg hover:bg-[var(--ui-hover)]/10" aria-label="Cambiar tema">
        <Icon src="/icons/ui/sun.svg" size="md" class="dark:hidden" />
        <Icon src="/icons/ui/moon.svg" size="md" class="hidden dark:inline-flex" />
      </button>
    </div>

    <Button href="mailto:contacto@lumina.dev" target="_blank" icon="ui/send-email-white" text="Contáctame" />
  </div>
</nav>

  <script is:raw>
    (function () {
      // ===== Menú móvil con animación suave =====
      const btn  = document.getElementById('menu-btn');
      const menu = document.getElementById('mobile-menu');

      function openMenu() {
        menu.classList.remove('opacity-0','translate-y-2','scale-95','invisible','pointer-events-none');
        menu.classList.add('opacity-100','translate-y-0','scale-100','visible','pointer-events-auto');
        btn.setAttribute('aria-expanded', 'true');
        menu.setAttribute('aria-hidden', 'false');
      }

      function closeMenu() {
        menu.classList.remove('opacity-100','translate-y-0','scale-100','visible','pointer-events-auto');
        menu.classList.add('opacity-0','translate-y-2','scale-95','invisible','pointer-events-none');
        btn.setAttribute('aria-expanded', 'false');
        menu.setAttribute('aria-hidden', 'true');
      }

      if (btn && menu) {
        let open = false;

        btn.addEventListener('click', () => {
          open ? closeMenu() : openMenu();
          open = !open;
        });

        // Cerrar con Escape
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape' && open) {
            closeMenu();
            open = false;
          }
        });
      }

      // ===== Tema (igual que tenías) =====
      const ids = ['theme-toggle', 'theme-toggle-mobile'];
      const toggles = ids.map(id => document.getElementById(id)).filter(Boolean);

      const KEY = 'theme';
      const root = document.documentElement;

      function apply(theme) {
        const isDark = theme === 'dark';
        root.classList.toggle('dark', isDark);
        toggles.forEach(b => b && b.setAttribute('aria-pressed', isDark ? 'true' : 'false'));
      }

      const saved = localStorage.getItem(KEY);
      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
      apply(saved ? saved : (prefersDark ? 'dark' : 'light'));

      function toggleTheme() {
        const nowDark = !root.classList.contains('dark');
        localStorage.setItem(KEY, nowDark ? 'dark' : 'light');
        apply(nowDark ? 'dark' : 'light');
      }

      toggles.forEach(b => b && b.addEventListener('click', toggleTheme));
    })();
  </script>
</header>