@import 'functions';

.about {
    @include element(100%, 100vh, 4rem 1rem 1rem, 0 0 2rem);
    @include flex(column, start, center);
    background: linear-gradient(3.5deg, map-get(map-get($colors, "lightModeColors"), "link"), map-get(map-get($colors, "darkModeColors"), "cards"));
    color: get-text-color(blue);

    &__container {
        @include element(auto, 60vh, 0, 0 0 2rem 0);
        @include flex(column, space-evenly, start);
        max-width: 50rem;

        h1{
            width: 23.7rem;
            align-self: center;

            span {
                max-width: 16.2rem;
                display: inline-block;
                overflow: hidden;
                white-space: nowrap;
                animation: typing 3s steps(30) 2.2s;
            }

            .pip {
                animation: borderP 1s infinite alternate;
                font-weight: 100;
            }

            @keyframes typing {
                from {
                  width: 0;
                }
                to {
                  width: 100%;
                }
            }

            @keyframes borderP {
                0% {
                    color: white; 
                }
                50% {
                    color: transparent; 
                }
                100% {
                    color: white; 
                }
            }
        }

        &--img {
            @include element(28rem, 22rem, 0, 2rem auto);
            background-image: url(map-get(map-get($images, "photos"), "hero-img"));
            background-repeat: no-repeat;
            background-position: center;
            background-size: contain;
        }
    }
}

.future {
    @include element(100%, 70vh, 6rem 1rem 1rem, 2rem auto);
    @include flex(column, space-evenly, center);

    &__container {
        @include element(100%, auto, 2rem, 0);
        border: 0.1rem solid black;
        border-radius: 2rem;
        box-shadow: 0.1rem 0.1rem 0.2rem black;
        align-content: center;
        background: map-get(map-get($colors, "lightModeColors"), "cards");
        text-align: justify;

        &:hover {
            @include transition;
            transform: scale(1.015);
        }

        p {
            i, span {
                font-size: 2rem;
                font-weight: bold;
                color: map-get(map-get($colors, "lightModeColors"), "details");
            }
        }
    }
}

.services {
    @include element(100%, 100vh, 6rem 1rem 2rem, 0);
    @include position(relative);
    @include flex(column, end, start);
    background-image: url(map-get(map-get($images, "projects"), "bg"));
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;

    &__btns {
      @include element(100%, auto, 0, 0 auto 16rem);
      @include flex(column, center, start);

      h3:nth-child(4) {
        font-size: 2.4rem;
        font-weight: 700;
        align-self: center;
        color: map-get(map-get($colors, "lightModeColors"), "link");
        margin-block-start: 2.4rem;
      }

      button {
        @include flex(row, start, center);
        @include transition;
        padding: 0;
        outline: none;

        &:hover {
          transform: translateX(2rem);
        }

        i {
          color: map-get(map-get($colors, "lightModeColors"), "link");
          width: 2rem;
        }
      }
    }

    .modal {
      @include element(100%, 100%);
      @include position(fixed, 0, 0, 0, 0, 9);
      @include transition;
      background: rgba(0, 0, 0, 0.7);
      display: grid;
      place-items: center;
      visibility: hidden;
      opacity: 0;

      &__container {
        @include element(90%, auto, 3rem 2rem, 0);
        @include position(relative);
        @include transition;
        background: map-get(map-get($colors, "lightModeColors"), "bg-color");
        border-bottom-right-radius: 2rem;
        border-top-left-radius: 2rem;
        text-align: justify;
        align-content: center;
        transform: scale(0);
      
        i {
        @include position(absolute, 1rem, 1rem, null, null, null);
        font-size: 1.8rem;
        @include transition;
        color: map-get(map-get($colors, "lightModeColors"), "details");
        cursor: pointer;

        &:hover {
          transform: scale(1.1);
        }
        }

        ul {
          list-style: circle;
          padding-left: 3rem;
          text-align: start;

          span {
            font-weight: bold;
          }
        }
      }
  
      &.hidden {
      opacity: 0;
      visibility: hidden;
      }

      &.visible {
        visibility: visible;
        opacity: 1;
      }
    }

    h3 {
        color: (map-get(map-get($colors, "darkModeColors"), "main-text"));
        text-align: start;
    }
  
    &__container {
      @include transition;
    }
  
    &__slider {
      @include element(100%, 100vh, 0, 0);
      @include transition;
    }
  
    &__service {
      @include element(90vw, 22rem, 2rem, 2rem auto); 
      @include transition;
      background-color: #fff;
      border-radius: 1rem;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      text-align: justify;
      overflow-y: scroll;
      position: relative;

      i {
        font-size: 2rem;
        margin-block-end: 1rem;
        position: absolute;
        top: 2rem;
        left: 1.4rem;
      }
  
      h3 {
        font-size: 1.5rem;
        margin-block-end: 1rem;
        text-align: end;
      }

      &:hover {
        transform: rotateY(-15deg);
      }
    }
}

.tech {
    @include element(100%, 100vh, 2rem 1rem, 0);
    @include flex(column, space-evenly, center, nowrap, 0);
    justify-items: center;
    overflow: hidden;

    &__container {
      @include flex(column, space-evenly, start);
      @include element(100%, 50%);

      h2 {
        text-align: center;
      }

      p {
        span {
          font-weight: bold;
          color: map-get(map-get($colors, "lightModeColors"), "details")
        }
      }

      span {
        font-weight: bold;
        font-size: large;
        text-align: center;
      }
    }

    &__slider {
      @include element(24rem, 28rem);
      transform-style: preserve-3d;

      input {
        display: none;
      }

      #html:checked ~  .tech__cards #html,
      #css:checked ~  .tech__cards #css, 
      #tailwindcss:checked ~  .tech__cards #tailwindcss, 
      #sass:checked ~  .tech__cards #sass, 
      #javascript:checked ~  .tech__cards #javascript, 
      #react:checked ~  .tech__cards #react, 
      #nodejs:checked ~  .tech__cards #nodejs, 
      #express:checked ~  .tech__cards #express, 
      #git-github:checked ~  .tech__cards #git-github, 
      #terminal:checked ~  .tech__cards #terminal, 
      #regex:checked ~  .tech__cards #regex,
      #figma:checked ~  .tech__cards #figma  {
        transform: translateX(0) scale(1);
        opacity: 1;
        z-index: 9;
      }
    }

    #html:checked ~ .tech__cards #css {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #html:checked ~ .tech__cards #figma {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #css:checked ~ .tech__cards #tailwindcss {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #css:checked ~ .tech__cards #html {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
 
    #tailwindcss:checked ~ .tech__cards #sass {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #tailwindcss:checked ~ .tech__cards #css {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #sass:checked ~ .tech__cards #javascript {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #sass:checked ~ .tech__cards #tailwindcss {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #javascript:checked ~ .tech__cards #react {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #javascript:checked ~ .tech__cards #sass {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #react:checked ~ .tech__cards #nodejs {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #react:checked ~ .tech__cards #javascript {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #nodejs:checked ~ .tech__cards #express {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #nodejs:checked ~ .tech__cards #react {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #express:checked ~ .tech__cards #git-github {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #express:checked ~ .tech__cards #nodejs {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #git-github:checked ~ .tech__cards #terminal {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #git-github:checked ~ .tech__cards #express {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #terminal:checked ~ .tech__cards #regex {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #terminal:checked ~ .tech__cards #git-github {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #regex:checked ~ .tech__cards #figma {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #regex:checked ~ .tech__cards #terminal {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    #figma:checked ~ .tech__cards #html {
      transform: translateX(40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }
    
    #figma:checked ~ .tech__cards #regex {
      transform: translateX(-40%) scale(0.8);
      opacity: 0.5;
      z-index: 0;
    }

    &__cards {
      @include element(100%, 100%, 0, 2rem auto);
      @include position(relative);

      .card {
        @include position(absolute, null, 0, null, 0, null);
        @include grid(1, 1fr, auto, 0, center, center);
        @include element(100%, 100%);
        @include transition;
        grid-template-rows: 75% 25%;
        margin: 0 auto;
        border-radius: 1rem;
        background: linear-gradient(to top, map-get(map-get($colors, "lightModeColors"), "bg-color"), map-get(map-get($colors, "lightModeColors"), "link"));
        box-shadow: 0.1rem 0.2rem 0.2rem rgba(0, 0, 0, 0.1);
        cursor: pointer;

        i {
          font-size: 8.8rem;
          text-shadow: 0.2rem 0.4rem 0.2rem rgba(0, 0, 0, 0.2);
        }

        span {
          font-size: 2rem;
          font-weight: bold;
          color: map-get(map-get($colors, "darkModeColors"), "bg-color")
        }
      }
    }
}

.projects {
  @include element(100%, 100vh, 6rem 1rem 1rem, 0);
  background: linear-gradient(to bottom, map-get(map-get($colors, "lightModeColors"),"bg-color"), map-get(map-get($colors, "lightModeColors"), "link"), map-get(map-get($colors, "darkModeColors"), "bg-color"));
  
  h2 {
    text-align: center;
  }

  &__grid{
    @include grid(1, 1fr, 3, 1.6rem, center, center);
    grid-template-rows: 1fr 1fr 1fr;
    margin-block-start: 3rem;

    .project {
      @include element(90%, 20rem);
      @include position(relative);
      cursor: pointer;
      overflow: hidden;
      border-bottom: 0.5rem solid map-get(map-get($colors, "lightModeColors"), "bg-color");
      border-radius: 0.4rem; 

      &__contain {
        @include position(absolute, 100%, null, null, 0);
        @include element(100%, 100%, 1rem, auto);
        @include transition;
        text-overflow: ellipsis;
        text-align: justify;
        opacity: 0;
        align-content: center;
      }

      &::after {
        @include position(absolute, 100%, null, null, 0, null);
        @include element(100%, 100%, 2rem, 0);
        @include transition;
        background: map-get(map-get($colors, "lightModeColors"), "bg-color");
        opacity: 0;
         content: "";
      }

      &:hover {
        &::after {
          top: 0;
          opacity: 0.9;
        }

        .project__contain {
          top: 0;
          opacity: 1;
          z-index: 3;
          transition-delay: 0.4s;
        }

        .project__btns {
          top: 90%;
          opacity: 1;
          transition-delay: 0.4s;
          z-index: 4;
        }
      }

      &__img {
        @include element(100%, 100%);
        background-image: url(map-get(map-get($images, "projects"), "bg"));
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
      }

      &__btns {
        @include position(absolute, 100%, null, null, null, null);
        @include flex(row, space-around, center);
        margin-block-end: 0.2rem;
        opacity: 0;

        a {
        color: map-get(map-get($colors, "darkModeColors"), "bg-color");
          font-size: 1.4rem;

          i {
            font-size: 1.3rem;
          }
        }
      }
    }
  }

  &>h3 {
    align-self: center;
    text-align: end;
    width: 90%;
    margin: 2rem auto 0;
    text-decoration: underline;
  }
}