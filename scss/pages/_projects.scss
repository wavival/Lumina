@import '../components/variables';
@import '../components/functions';

.projectss {
    @include element(100%, 100vh, 0, 0);

    &__dev {

        @media (min-width: 768px) {
            @include flex(row, space-evenly, center, nowrap, 0);
            max-width: 70rem;
        }

        @media (min-width: 1200px) {
            display: initial;
        }
    }

    &__discover, #hdilearn {
        width: 90%;
        display: initial;
        align-self: flex-end;
        text-align: end;
        font-weight: bold;
        color: map-get(map-get($colors, "darkModeColors"), "main-text");

        @media (min-width: 1200px) {
            text-align: center;
        }

        &:hover {
            transform: translate(-0.5rem);
            color: map-get(map-get($colors, "darkModeColors"), "main-text");
        }
    }

    &__discover {
        @media (min-width: 1200px) {
            width: 100%;
        }
    }

    #hdilearn {
        display: block;
        margin-block-start: 1rem;;
        width: 100%;

        @media (min-width: 768px) {
             margin: 0;
             align-self: center;
        }

        i {
            vertical-align: bottom
        }
    }

    &__info {
        @include element(100%, 100vh, 0 1rem 2rem 1rem, 0);
        @include flex(column, space-evenly, center, nowrap, 0);
        color: map-get(map-get($colors, "darkModeColors"), "main-text");
        background-color: map-get(map-get($colors, "lightModeColors"), "link-hover");

        @media (min-width: 1024px) {
            padding: 4rem 8rem 0;
        }

        h2 {
            margin-block-start: 2rem;
            margin-inline-end: 6rem;
            color: map-get(map-get($colors, "darkModeColors"), "main-text");

            @media (min-width: 768px) {
                margin: 0;
            }
        }

        ul {
            @include element(100%, 50%, 0);
            @include grid(1, 1fr, auto);
            padding: 2rem;
            margin: 0;
            overflow-y: scroll;

            @media (min-width: 768px) {
                @include grid(2, 1fr, auto);
                height: auto;
                overflow-y: visible;
            }

            @media (min-width: 1024px) {
                height: 30%;
                overflow-y: scroll;
            }

            @media (min-width: 1200px) {
                @include grid(2, 1fr, auto);
                grid-template-rows: 1;
                width: 65%;
            }

            li {
                @include element(100%, 100%);
                @include flex(row, space-between, center);
                @include transition;
                color: map-get(map-get($colors, "lightModeColors"), "main-text");
                text-align: justify;
                padding: 1rem;
                border-radius: 0.5rem;
                background-color: map-get(map-get($colors, "lightModeColors"), "bg-color");
                box-shadow: 0 0.2rem 0.5rem map-get(map-get($colors, "lightModeColors"), "shadow");

                @media (min-width: 768px) {
                    flex-direction: column;
                    justify-content: normal;
                }

                &:hover {
                    transform: scale(1.02);
                    box-shadow: 0 0.2rem 0.5rem map-get(map-get($colors, "lightModeColors"), "shadow");
                    cursor: pointer;

                    a {
                        @include transition; 
                        
                        &:hover {
                            transform: translate(1rem);
                        }
                    }
                }
            }
        }
    }

    &__items {
        @include element(100%, auto, 1rem, 0);
        @include flex(column, space-evenly, center);

        @media (min-width: 768px) {
            padding-block-start: 6rem;
        }

        @media (min-width: 1024px) {
            padding: 8rem 4rem 4rem;
        }

        @media (min-width: 1400px) {
            @include grid(2, 1fr, auto, 0);
            padding: 4rem;
        }

        .project {
            @include element(100%, max-content, 1rem, 1rem);
            @include flex(column, space-evenly, center);
            @include position(relative);
            border-radius: 0.5rem;
            box-shadow: 0 0.2rem 0.5rem map-get(map-get($colors, "lightModeColors"), "shadow");
            text-align: justify;

            @media (min-width: 768px) {
                @include element(90%, auto, 2rem, 1.6rem);
                @include grid(2, 1fr, auto);
                place-content: center;
                overflow: hidden;
            }

            h2 {
                text-align: center;
                margin-block-end: 1rem;
            }

            &__info {
                @media (min-width: 768px) {
                    grid-column: 2 / 3;
                    grid-row: 1 / 2;
                }
            }

            &__img {
                @include element(100%, 28rem, 0, 0 0 4rem);
                border-radius: 0.5rem;
                /*box-shadow: 0 0.2rem 0.5rem map-get(map-get($colors, "lightModeColors"), "shadow");*/

                @media (min-width: 768px) {
                    @include element(30rem, 30rem);
                    grid-column: 1 / 2;
                    grid-row: 1 / 2;
                }
            }

            &__tech-stack {
                @include element(100%, auto, 0, 1.6rem 0);
                @include flex(row, space-evenly, center);
                list-style: none;

                @media (min-width: 768px) {
                    
                }

                li {
                    i {
                        font-size: 4rem;
                    }
                }
            }

            &__links {
                @include element(100%, auto, 1rem 0 0.5rem, 0);
                @include flex(row, space-evenly, center);
                @include position(absolute, null, 0, 0.5rem, null);
                border-block-start: 0.2rem solid map-get(map-get($colors, "lightModeColors"), "border");

                a {
                    color: map-get(map-get($colors, "lightModeColors"), "main-text");

                    &:hover {
                        color: map-get(map-get($colors, "lightModeColors"), "link-hover");
                    }
                }
            }

            .building, .deployed {
                @include element(auto, 4rem, 1rem, 0);
                @include position(absolute, null, null, 6rem, 0);
                background-color: #ff9800;
                text-align: center;
                border-top-right-radius: 5rem;
                border-bottom-right-radius: 5rem;

                @media (min-width: 768px) {
                    width: 30rem;
                    border-radius: 0;
                    top: 3rem;
                    left: -12%;
                    transform: rotate(-35deg);
                }

                p {
                    text-transform: uppercase;
                    font-weight: bold;
                    color: white
                }
            }

            .deployed {
                background-color: #4caf50;
            }
        }

        #ubuntu {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "ubuntu")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }

        #codeCanvas {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "codecanvas")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }

        #lunariaShop {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "lunaria-shop")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }

        #cryptoNest {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "cryptonest")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }

        #managAsk {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "managask")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }

        #googleClon {
            .project__img {
                background: url(map-get(map-get($images, "projects"), "google-clon")) center;
                background-size: contain;
                background-repeat: no-repeat;
            }
        }
    }

    &__work-xp {
        @include element(100%, auto, 2rem 1rem, 0);
        @include flex(column, space-evenly, center);
        background: linear-gradient(3.5deg, map-get(map-get($colors, "lightModeColors"), "link"), map-get(map-get($colors, "darkModeColors"), "cards"));
        color: map-get(map-get($colors, "darkModeColors"), "main-text");

        @media (min-width: 768px) {
            @include grid(2, 1fr, auto);
            padding-block-start: 8rem;
        }

        @media (min-width: 1024px) {
            padding: 8rem;
            grid-template-columns: 1fr;
        }

        @media (min-width: 1300px) {
            grid-template-columns: repeat(2, 1fr);
          }
    }

    &__learning {
        text-align: justify;

        @media (min-width: 768px) {
            margin-inline-start: 1rem;
        }

        h2 {
            text-align: center;
            margin-block-end: 1rem;

            @media (min-width: 1024px) {
                margin-block-end: 2rem;
            }
        }
    }

    &__diploma {
        text-align: center;

        @media (min-width: 768px) {
            @include grid(1, 1fr, 2);
            grid-template-rows: repeat(2, 1fr) 4.5rem;
        }

        @media (min-width: 1024px) {
            @include grid(2, 1fr, auto);
            grid-template-rows: auto;
        }

        a {
            @include transition;
            padding: 1rem;
            border-radius: 0.4rem;
            color: map-get(map-get($colors, "darkModeColors"), "main-text");
            font-size: 2rem;
            text-align: end;
            grid-column: auto;
            
            @media (min-width: 768px) {
            }

            &:hover {
                background: map-get(map-get($colors, "darkModeColors"), "bg-color");
                transform: scale(1.01);
            }
        }
    }

    &__knowmore { 
        @media (min-width: 1024px) {        
            grid-column: 1 / 3 !important;
        }
    }

    &__thanks {
        text-align: justify;
        position: relative;
        padding: 1rem 1rem 14rem 1rem;

        @media (min-width: 768px) {
            @include flex(row-reverse, space-evenly, center, nowrap, 0);
            padding: 0;
            margin-block-end: 2rem;
            margin-block-start: 2rem;
            border-top: 0.2rem solid map-get(map-get($colors, "darkModeColors"), "border");
            border-bottom: 0.2rem solid map-get(map-get($colors, "darkModeColors"), "border");
        }

        h2 {
            text-align: center;
        }
    }

    &__text {
        padding: 2rem;
    }

    &__contact {
        @include element(100vw, 12rem, 0.8rem, 0);
        @include position(absolute, null, 0, 1rem, 0);
        @include flex(row, center, center);
        background: linear-gradient(to left, map-get(map-get($colors, "lightModeColors"), "link"), map-get(map-get($colors, "darkModeColors"), "cards"));
        font-size: 3.2rem;

        @media (min-width: 768px) {
            @include position(initial);
            height: 32rem;
        }

        @media (min-width: 1300px) {
            width: 50vw;
        }
    
        a {
            font-size: 2.4rem;
            color: map-get(map-get($colors, "darkModeColors"), "main-text")
        }
    }

    .bar {
        @media (min-width: 768px) {
            @include element(100%, 10rem, 0, 0);
            background-color: map-get(map-get($colors, "darkModeColors"), "bg-color");
        }
    }
}
